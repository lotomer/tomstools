<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:context="http://www.springframework.org/schema/context"
    xsi:schemaLocation="   
     http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd   
     http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd">

    <!-- 待爬取对象：0731fdc 株洲新房咨询。对应 org.tomstools.crawler.config.Target -->
    <bean id="target-caipiao-liuhecai" class="org.tomstools.crawler.config.Target" scope="prototype">
        <property name="name" value="caipiao-liuhecai"></property>
        <property name="url" value="http://www.50789.com/kaijiangjilu/"></property>
        <property name="defaultCharsetName" value="GBK"></property>
        <property name="crawlingRule" ref="crawlingRule"></property>
        <property name="parser" ref="htmlParser"></property>
        <property name="contentPageExtractor">
            <bean class="org.tomstools.crawler.extractor.impl.BaseContentPageExtractor" scope="prototype">
                <!-- 构造函数参数 1: 元素选择表达式 -->
                <constructor-arg index="0" type="java.lang.String">
                    <value><![CDATA[table#table1>tbody>tr>td>font>a]]></value>
                </constructor-arg>
                <!-- 构造函数参数 2: 子页面url模板 -->
                <constructor-arg index="1" type="java.lang.String">
                    <value><![CDATA[%s]]></value>
                </constructor-arg>
                <!-- 构造函数参数3: 提取子页面url的正则表达式，与format配合使用，将正则表达式的group数据代入format中以生成完整的子页面url -->
                <constructor-arg index="2" type="java.lang.String">
                    <value><![CDATA[<a[^<>]+?href="([^"]+?)".*]]></value>
                </constructor-arg>
                <!-- 构造函数参数4: 过滤规则的正则表达式，如果匹配上，则直接过滤不进行子页面的提取 -->
                <constructor-arg index="3" type="java.lang.String">
                    <value><![CDATA[]]></value>
                </constructor-arg>
                <property name="contentPageExtractor">
                    <null></null>
                </property>
            </bean>
        </property>
        <property name="navigationExtractor">
            <bean class="org.tomstools.crawler.extractor.impl.ExpressionNavigationExtractor"
                scope="prototype">
                <!-- 构造函数参数 1: 表达式：开始值|结束值|递增或递减的步长 -->
                <constructor-arg index="0" type="java.lang.String">
                    <value><![CDATA[]]></value>
                </constructor-arg>
                <!-- 构造函数参数 2: 参数对应的模板。需要替换的内容使用%s代替 -->
                <constructor-arg index="1">
                    <map>
                    </map>
                </constructor-arg>
            </bean>
        </property>
        <property name="contentExtractor">
            <!-- 内容抽取器。对应 org.tomstools.crawler.extractor.ContentExtractor -->
            <bean class="org.tomstools.crawler.extractor.ContentExtractor" scope="prototype">
                <!-- 构造函数参数 1: 元素选择表达式 -->
                <constructor-arg index="0" type="java.lang.String">
                    <value><![CDATA[body table>tbody>tr[bgcolor]]]></value>
                </constructor-arg>
                <!-- 构造函数参数 2: 表头。列名之间用英文逗号“,”分隔 -->
                <constructor-arg index="1" type="java.lang.String[]">
                    <value><![CDATA[qishu,b1]]></value>
                </constructor-arg>
                <!-- 构造函数参数 3: 固定属性 -->
                <constructor-arg index="2">
                    <list>
                    </list>
                </constructor-arg>
                <!-- 构造函数参数 4: 提取属性配置信息 -->
                <constructor-arg index="3">
                    <list>
                        <bean class="org.tomstools.crawler.extractor.ContentExtractor.TextField">
                            <!-- 构造函数参数 1: 名称 -->
                            <constructor-arg index="0" type="java.lang.String">
                                <value><![CDATA[qishu1]]></value>
                            </constructor-arg>
                            <!-- 构造函数参数 2: 元素选择表达式 -->
                            <constructor-arg index="1" type="java.lang.String">
                                <value><![CDATA[td:eq(0)>font]]></value>
                            </constructor-arg>
                            <!-- 构造函数参数3: 字段拆分器 -->
                            <constructor-arg index="2">
                                <bean class="org.tomstools.crawler.common.FieldSplitter" scope="prototype">
                                    <!-- 构造函数参数 1: 提取内容是的正则表达式  -->
                                    <constructor-arg index="0" type="java.lang.String">
                                        <value><![CDATA[(\d+?)/(\d+).*]]></value>
                                    </constructor-arg>
                                    <!-- 构造函数参数 2: 需要收集的字段的索引数组。从1开始计数。索引不能大于正则表达式regex中的分组数（即圆括号数） -->
                                    <constructor-arg index="1" type="int[]">
                                        <value><![CDATA[1,2]]></value>
                                    </constructor-arg>
                                    <!-- 构造函数参数 3: 需要收集的字段的名称数组。索引数组和名称数组必须匹配 -->
                                    <constructor-arg index="2" type="java.lang.String[]">
                                        <value><![CDATA[year,qs]]></value>
                                    </constructor-arg>
                                    <!-- 构造函数参数 4: 字段名对应的字段值转换器 -->
                                    <constructor-arg index="3"><null></null></constructor-arg>
                                </bean>
                            </constructor-arg>
                        </bean>
                        <bean class="org.tomstools.crawler.extractor.ContentExtractor.MultipleField">
                            <!-- 构造函数参数 1: 名称 -->
                            <constructor-arg index="0" type="java.lang.String">
                                <value><![CDATA[qishu]]></value>
                            </constructor-arg>
                            <!-- 构造函数参数 2: 元素选择表达式 -->
                            <constructor-arg index="1" type="java.lang.String">
                                <value><![CDATA[year|qs,${year}${qs}]]></value>
                            </constructor-arg>
                        </bean>
                        <bean class="org.tomstools.crawler.extractor.ContentExtractor.AttributeField">
                            <!-- 构造函数参数 1: 名称 -->
                            <constructor-arg index="0" type="java.lang.String">
                                <value><![CDATA[b1]]></value>
                            </constructor-arg>
                            <!-- 构造函数参数 2: 元素选择表达式 -->
                            <constructor-arg index="1" type="java.lang.String">
                                <value><![CDATA[td:eq(2)>font>img]]></value>
                            </constructor-arg>
                            <!-- 构造函数参数3: 字段拆分器 -->
                            <constructor-arg index="2">
                                <bean class="org.tomstools.crawler.common.FieldSplitter" scope="prototype">
                                    <!-- 构造函数参数 1: 提取内容是的正则表达式  -->
                                    <constructor-arg index="0" type="java.lang.String">
                                        <value><![CDATA[(\d*?)\..*]]></value>
                                    </constructor-arg>
                                    <!-- 构造函数参数 2: 需要收集的字段的索引数组。从1开始计数。索引不能大于正则表达式regex中的分组数（即圆括号数） -->
                                    <constructor-arg index="1" type="int[]">
                                        <value><![CDATA[1]]></value>
                                    </constructor-arg>
                                    <!-- 构造函数参数 3: 需要收集的字段的名称数组。索引数组和名称数组必须匹配 -->
                                    <constructor-arg index="2" type="java.lang.String[]">
                                        <value><![CDATA[b1]]></value>
                                    </constructor-arg>
                                    <!-- 构造函数参数 4: 字段名对应的字段值转换器 -->
                                    <constructor-arg index="3"><null></null></constructor-arg>
                                </bean>
                            </constructor-arg>
                            <property name="attributeName" value="src"></property>
                        </bean>
                    </list>
                </constructor-arg>
            </bean>
        </property>
    </bean>
    
</beans>
