<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:context="http://www.springframework.org/schema/context"
    xsi:schemaLocation="   
     http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd   
     http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd">

    <!-- in-memory database and a datasource -->
    <!-- 配置文件导入 -->
    <context:property-placeholder location="jdbc.properties"
        ignore-unresolvable="true" />
    <!-- 注册自定义属性编辑器 <bean id="customEditorConfigure" class="org.springframework.beans.factory.config.CustomEditorConfigurer"> 
        <property name="customEditors"> <map> <entry key="java.util.Map"> <bean class="cn.com.talkweb.classify.spring.MapEditor"> 
        </bean> </entry> </map> </property> </bean> -->

    <!-- 数据库数据源 <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource"> <property name="driverClassName" 
        value="${jdbc.driver}" /> <property name="url" value="${jdbc.url}"/> <property name="username" value="${jdbc.username}" 
        /> <property name="password" value="${jdbc.password}" /> <property name="maxIdle" value="20" /> <property 
        name="maxActive" value="50" /> <property name="maxWait" value="3000" /> <property name="minIdle" value="10" 
        /> <property name="removeAbandoned" value="true"/> <property name="removeAbandonedTimeout" value="60"/> 
        </bean> -->

    <!-- transaction manager, use JtaTransactionManager for global tx <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager"> 
        <property name="dataSource" ref="dataSource" /> </bean> -->

    <!-- 爬取规则。对应 org.tomstools.crawler.config.CrawlingRule -->
    <bean id="crawlingRule" class="org.tomstools.crawler.config.CrawlingRule" scope="prototype">
        <property name="batchIntervalInit" value="500"></property>
        <property name="batchIntervalFinal" value="300"></property>
        <property name="batchIntervalStep" value="50"></property>
        <property name="batchSizeInit" value="5"></property>
        <property name="batchSizeFinal" value="2"></property>
        <property name="batchSizeStep" value="1"></property>
        <property name="connectionTimeOut" value="20000"></property>
        <property name="socketTimeOut" value="30000"></property>
    </bean>

    <!-- 文档解析器：HTML。对应 org.tomstools.crawler.parser.Parser -->
    <bean id="htmlParser" class="org.tomstools.crawler.parser.HTMLParser" scope="prototype">
    </bean>

    <!-- 子页面抽取器：包含子页面的抽取器。对应 org.tomstools.crawler.extractor.SubpageExtractor -->
    <bean id="BaseContentPageExtractor" class="org.tomstools.crawler.extractor.impl.BaseContentPageExtractor"
        scope="prototype">
        <!-- 构造函数参数 1: 元素选择表达式 -->
        <constructor-arg index="0" type="java.lang.String">
            <value><![CDATA[div#ddd>div.list-con>dl>dt>ul>li.floorname]]></value>
        </constructor-arg>
    </bean>

    <!-- 分页导航抽取器：从页面的分页信息中直接抽取。对应 org.tomstools.crawler.extractor.NavigationExtractor -->
    <bean id="pageNavigationExtractor" class="org.tomstools.crawler.extractor.impl.PageNavigationExtractor"
        scope="prototype">
        <!-- 构造函数参数 1: 元素选择表达式 -->
        <constructor-arg index="0" type="java.lang.String">
            <value><![CDATA[div#page ul.pageno a[title=下一页]]]></value>
        </constructor-arg>
        <!-- 构造函数参数 2: 下一页对应的url的正则表达式，group 1对应url值 -->
        <constructor-arg index="1" type="java.lang.String">
            <value><![CDATA[<a .*?href="(.*?)"]]></value>
        </constructor-arg>
    </bean>
    <!-- 分页导航抽取器：从页面的分页信息中抽取数据，并将数据填入模板以生成新的分页。对应 org.tomstools.crawler.extractor.NavigationExtractor -->
    <bean id="templatePageNavigationExtractor" class="org.tomstools.crawler.extractor.impl.TemplatePageNavigationExtractor"
        scope="prototype">
    </bean>
    <!-- 分页导航抽取器：使用表达式自动生成导航页面的抽取器。对应 org.tomstools.crawler.extractor.NavigationExtractor -->
    <bean id="expressionNavigationExtractor" class="org.tomstools.crawler.extractor.impl.ExpressionNavigationExtractor"
        scope="prototype">
    </bean>

    <!-- 内容抽取器：样例。对应 org.tomstools.crawler.extractor.ContentExtractor -->
    <bean id="contentExtractorSample" class="org.tomstools.crawler.extractor.ContentExtractor" scope="prototype">
        <!-- 构造函数参数 1: 元素选择表达式 -->
        <constructor-arg index="0" type="java.lang.String">
            <value><![CDATA[div#ddd>div.list-con]]></value>
        </constructor-arg>
        <!-- 构造函数参数 2: 提取属性配置信息 -->
        <constructor-arg index="1">
            <map>
                <entry key="floorName">
                    <value><![CDATA[dl>dt>ul>li.floorname]]></value>
                </entry>
            </map>
        </constructor-arg>
        <!-- 构造函数参数 2: 字段拆分器 -->
        <constructor-arg index="2">
            <null></null>
        </constructor-arg>
    </bean>

    <!-- 字段拆分器：样例。对应 org.tomstools.crawler.common.FieldSplitter -->
    <bean id="fieldSplitter" class="org.tomstools.crawler.common.FieldSplitter" scope="prototype">
        <!-- 构造函数参数 1: 拆分时的分隔符 -->
        <constructor-arg index="0" type="java.lang.String">
            <value><![CDATA[ ]]></value>
        </constructor-arg>
        <!-- 构造函数参数 2: 拆分的字段个数 -->
        <constructor-arg index="1" type="int">
            <value><![CDATA[2]]></value>
        </constructor-arg>
        <!-- 构造函数参数 3: 需要收集的字段的索引数组。从0开始计数。索引必须小于拆分的字段个数 -->
        <constructor-arg index="2" type="int[]">
            <value><![CDATA[0,1]]></value>
        </constructor-arg>
        <!-- 构造函数参数 4: 需要收集的字段的名称数组。索引数组和名称数组必须匹配 -->
        <constructor-arg index="3" type="java.lang.String[]">
            <value><![CDATA[totalPrice,price]]></value>
        </constructor-arg>
        <!-- 构造函数参数 5: 字段名对应的字段值转换器 -->
        <constructor-arg index="4">
            <map>
                <entry key="time" value-ref="string2dtString"></entry>
            </map>
        </constructor-arg>
    </bean>
    
    <!-- 数据转换器：样例。对应 org.tomstools.crawler.common.ValueConvertible<String, String> -->
    <bean id="string2dtString" class="org.tomstools.crawler.common.String2DateTimeString" scope="prototype">
        <!-- 构造函数参数 1: 时间格式。不能为null。如果转换失败，则使用相对时间，暂时支持 (月|周|天|小时|分钟|秒)(前|后)，比如 10秒前、1小时后 -->
        <constructor-arg index="0" type="java.lang.String">
            <value><![CDATA[yyyy-MM-dd]]></value>
        </constructor-arg>
        <!-- 构造函数参数 2: 日期转换为字符串的输出格式 -->
        <constructor-arg index="1" type="java.lang.String">
            <value><![CDATA[yyyy-MM-dd HH]]></value>
        </constructor-arg>
    </bean>
    
    <!-- 待爬取对象：0731fdc 二手房咨询。对应 org.tomstools.crawler.config.Target -->
    <bean id="target-0731fdc-esf" class="org.tomstools.crawler.config.Target" scope="prototype">
        <property name="name" value="0731fdc-esf"></property>
        <property name="url" value="http://esf.0731fdc.com/sale"></property>
        <property name="regex4topDataFalg"><value><![CDATA[\[置顶\]]]></value></property>
        <property name="crawlingRule" ref="crawlingRule"></property>
        <property name="parser" ref="htmlParser"></property>
        <property name="contentPageExtractor">
            <bean class="org.tomstools.crawler.extractor.impl.BaseContentPageExtractor" scope="prototype">
                <!-- 构造函数参数 1: 元素选择表达式 -->
                <constructor-arg index="0" type="java.lang.String">
                    <value><![CDATA[body>div.page>div.container>div.list-sale-cont>div.wrapper>ul>li>div.item>div.title>a]]></value>
                </constructor-arg>
                <!-- 构造函数参数 2: 子页面url模板 -->
                <constructor-arg index="1" type="java.lang.String">
                    <value><![CDATA[%s]]></value>
                </constructor-arg>
                <!-- 构造函数参数3: 提取子页面url的正则表达式，与format配合使用，将正则表达式的group数据代入format中以生成完整的子页面url -->
                <constructor-arg index="2" type="java.lang.String">
                    <value><![CDATA[<a\s+?href="([^"]+?)".*]]></value>
                </constructor-arg>                
                <!-- 构造函数参数4: 过滤规则的正则表达式，如果匹配上，则直接过滤不进行子页面的提取 -->
                <constructor-arg index="3" type="java.lang.String">
                    <value><![CDATA[]]></value>
                </constructor-arg>
                <property name="contentPageExtractor">
                    <null></null>
                </property>
            </bean>
        </property>
        <property name="navigationExtractor">
            <bean class="org.tomstools.crawler.extractor.impl.PageNavigationExtractor"
                scope="prototype">
                <!-- 构造函数参数 1: 元素选择表达式 -->
                <constructor-arg index="0" type="java.lang.String">
                    <value><![CDATA[div.pagination a:containsOwn(下一页)]]></value>
                </constructor-arg>
                <!-- 构造函数参数 2: 下一页对应的url的正则表达式，group 1对应url值 -->
                <constructor-arg index="1" type="java.lang.String">
                    <value><![CDATA[<a .*?href="(.*?)">]]></value>
                </constructor-arg>
            </bean>
        </property>
        <property name="contentExtractor">
            <!-- 内容抽取器。对应 org.tomstools.crawler.extractor.ContentExtractor -->
            <bean class="org.tomstools.crawler.extractor.ContentExtractor" scope="prototype">
                <!-- 构造函数参数 1: 元素选择表达式 -->
                <constructor-arg index="0" type="java.lang.String">
                    <value><![CDATA[body>div.page>div.container]]></value>
                </constructor-arg>
                <!-- 构造函数参数 2: 表头 -->
                <constructor-arg index="1" type="java.lang.String[]">
                    <value><![CDATA[标题,发布时间,售价,均价,户型,面积,区域,楼盘名,地址,朝向,建筑年代,楼层,装修状况,房屋类别,物业类别]]></value>
                </constructor-arg>
                <!-- 构造函数参数 3: 固定属性配置信息 -->
                <constructor-arg index="2">
                    <map>
                    </map>
                </constructor-arg>
                <!-- 构造函数参数 4: 提取属性配置信息 -->
                <constructor-arg index="3">
                    <map>
                        <entry key="标题">
                            <value><![CDATA[#house-info-top > div.left]]></value>
                        </entry>
                        <entry key="发布时间">
                            <value><![CDATA[#house-info-top > div.right > span.time]]></value>
                        </entry>
                        <entry key="售价">
                            <value><![CDATA[div.house-base-info > div.house-base-cont > div.wrapper > div.house-text-cont > div.house-money > ul > li:eq(0) > span:eq(0) > b]]></value>
                        </entry>
                        <entry key="均价">
                            <value><![CDATA[div.house-base-info > div.house-base-cont > div.wrapper > div.house-text-cont > div.house-money > ul > li:eq(0) > span:eq(1)]]></value>
                        </entry>
                        <entry key="户型">
                            <value><![CDATA[div.house-base-info > div.house-base-cont > div.wrapper > div.house-text-cont > div.house-money > ul > li:eq(1) > span:eq(0)]]></value>
                        </entry>
                        <entry key="面积">
                            <value><![CDATA[div.house-base-info > div.house-base-cont > div.wrapper > div.house-text-cont > div.house-money > ul > li:eq(2) > span:eq(0)]]></value>
                        </entry>
                        <entry key="区域">
                            <value><![CDATA[div.house-base-info > div.house-base-cont > div.wrapper > div.house-text-cont > div.house-position > ul > li:eq(0) > span:eq(0)]]></value>
                        </entry>
                        <entry key="楼盘名">
                            <value><![CDATA[div.house-base-info > div.house-base-cont > div.wrapper > div.house-text-cont > div.house-position > ul > li:eq(0) > span:eq(1)]]></value>
                        </entry>
                        <entry key="地址">
                            <value><![CDATA[div.house-base-info > div.house-base-cont > div.wrapper > div.house-text-cont > div.house-position > ul > li:eq(1) > span]]></value>
                        </entry>
                        <entry key="朝向">
                            <value><![CDATA[div.house-base-info > div.house-base-cont > div.wrapper > div.house-text-cont > div.house-position > ul > li:eq(2) > span:eq(0)]]></value>
                        </entry>
                        <entry key="建筑年代">
                            <value><![CDATA[div.house-base-info > div.house-base-cont > div.wrapper > div.house-text-cont > div.house-position > ul > li:eq(2) > span:eq(1)]]></value>
                        </entry>
                        <entry key="楼层">
                            <value><![CDATA[div.house-base-info > div.house-base-cont > div.wrapper > div.house-text-cont > div.house-position > ul > li:eq(3) > span:eq(0)]]></value>
                        </entry>
                        <entry key="装修状况">
                            <value><![CDATA[div.house-base-info > div.house-base-cont > div.wrapper > div.house-text-cont > div.house-position > ul > li:eq(3) > span:eq(1)]]></value>
                        </entry>
                        <entry key="房屋类别">
                            <value><![CDATA[div.house-base-info > div.house-base-cont > div.wrapper > div.house-text-cont > div.house-position > ul > li:eq(4) > span:eq(0)]]></value>
                        </entry>
                        <entry key="物业类别">
                            <value><![CDATA[div.house-base-info > div.house-base-cont > div.wrapper > div.house-text-cont > div.house-position > ul > li:eq(4) > span:eq(1)]]></value>
                        </entry>
                    </map>
                </constructor-arg>
                <!-- 构造函数参数 5: 字段拆分器 -->
                <constructor-arg index="4">
                    <map>
                        <entry key="发布时间">
                            <bean class="org.tomstools.crawler.common.FieldSplitter" scope="prototype">
                                <!-- 构造函数参数 1: 拆分时的分隔符 -->
                                <constructor-arg index="0" type="java.lang.String">
                                    <value><![CDATA[：]]></value>
                                </constructor-arg>
                                <!-- 构造函数参数 2: 拆分的字段个数 -->
                                <constructor-arg index="1" type="int">
                                    <value><![CDATA[2]]></value>
                                </constructor-arg>
                                <!-- 构造函数参数 3: 需要收集的字段的索引数组。从0开始计数。索引必须小于拆分的字段个数 -->
                                <constructor-arg index="2" type="int[]">
                                    <value><![CDATA[1]]></value>
                                </constructor-arg>
                                <!-- 构造函数参数 4: 需要收集的字段的名称数组。索引数组和名称数组必须匹配 -->
                                <constructor-arg index="3" type="java.lang.String[]">
                                    <value><![CDATA[发布时间]]></value>
                                </constructor-arg>
                                <!-- 构造函数参数 5: 字段名对应的字段值转换器 -->
                                <constructor-arg index="4"><null></null></constructor-arg>
                            </bean>
                        </entry>
                        <entry key="均价">
                            <bean class="org.tomstools.crawler.common.FieldSplitter" scope="prototype">
                                <!-- 构造函数参数 1: 拆分时的分隔符 -->
                                <constructor-arg index="0" type="java.lang.String">
                                    <value><![CDATA[：]]></value>
                                </constructor-arg>
                                <!-- 构造函数参数 2: 拆分的字段个数 -->
                                <constructor-arg index="1" type="int">
                                    <value><![CDATA[2]]></value>
                                </constructor-arg>
                                <!-- 构造函数参数 3: 需要收集的字段的索引数组。从0开始计数。索引必须小于拆分的字段个数 -->
                                <constructor-arg index="2" type="int[]">
                                    <value><![CDATA[1]]></value>
                                </constructor-arg>
                                <!-- 构造函数参数 4: 需要收集的字段的名称数组。索引数组和名称数组必须匹配 -->
                                <constructor-arg index="3" type="java.lang.String[]">
                                    <value><![CDATA[均价]]></value>
                                </constructor-arg>
                                <!-- 构造函数参数 5: 字段名对应的字段值转换器 -->
                                <constructor-arg index="4"><null></null></constructor-arg>
                            </bean>
                        </entry>
                        <entry key="户型">
                            <bean class="org.tomstools.crawler.common.FieldSplitter" scope="prototype">
                                <!-- 构造函数参数 1: 拆分时的分隔符 -->
                                <constructor-arg index="0" type="java.lang.String">
                                    <value><![CDATA[：]]></value>
                                </constructor-arg>
                                <!-- 构造函数参数 2: 拆分的字段个数 -->
                                <constructor-arg index="1" type="int">
                                    <value><![CDATA[2]]></value>
                                </constructor-arg>
                                <!-- 构造函数参数 3: 需要收集的字段的索引数组。从0开始计数。索引必须小于拆分的字段个数 -->
                                <constructor-arg index="2" type="int[]">
                                    <value><![CDATA[1]]></value>
                                </constructor-arg>
                                <!-- 构造函数参数 4: 需要收集的字段的名称数组。索引数组和名称数组必须匹配 -->
                                <constructor-arg index="3" type="java.lang.String[]">
                                    <value><![CDATA[户型]]></value>
                                </constructor-arg>
                                <!-- 构造函数参数 5: 字段名对应的字段值转换器 -->
                                <constructor-arg index="4"><null></null></constructor-arg>
                            </bean>
                        </entry>
                        <entry key="面积">
                            <bean class="org.tomstools.crawler.common.FieldSplitter" scope="prototype">
                                <!-- 构造函数参数 1: 拆分时的分隔符 -->
                                <constructor-arg index="0" type="java.lang.String">
                                    <value><![CDATA[：]]></value>
                                </constructor-arg>
                                <!-- 构造函数参数 2: 拆分的字段个数 -->
                                <constructor-arg index="1" type="int">
                                    <value><![CDATA[2]]></value>
                                </constructor-arg>
                                <!-- 构造函数参数 3: 需要收集的字段的索引数组。从0开始计数。索引必须小于拆分的字段个数 -->
                                <constructor-arg index="2" type="int[]">
                                    <value><![CDATA[1]]></value>
                                </constructor-arg>
                                <!-- 构造函数参数 4: 需要收集的字段的名称数组。索引数组和名称数组必须匹配 -->
                                <constructor-arg index="3" type="java.lang.String[]">
                                    <value><![CDATA[面积]]></value>
                                </constructor-arg>
                                <!-- 构造函数参数 5: 字段名对应的字段值转换器 -->
                                <constructor-arg index="4"><null></null></constructor-arg>
                            </bean>
                        </entry>
                        <entry key="区域">
                            <bean class="org.tomstools.crawler.common.FieldSplitter" scope="prototype">
                                <!-- 构造函数参数 1: 拆分时的分隔符 -->
                                <constructor-arg index="0" type="java.lang.String">
                                    <value><![CDATA[：]]></value>
                                </constructor-arg>
                                <!-- 构造函数参数 2: 拆分的字段个数 -->
                                <constructor-arg index="1" type="int">
                                    <value><![CDATA[2]]></value>
                                </constructor-arg>
                                <!-- 构造函数参数 3: 需要收集的字段的索引数组。从0开始计数。索引必须小于拆分的字段个数 -->
                                <constructor-arg index="2" type="int[]">
                                    <value><![CDATA[1]]></value>
                                </constructor-arg>
                                <!-- 构造函数参数 4: 需要收集的字段的名称数组。索引数组和名称数组必须匹配 -->
                                <constructor-arg index="3" type="java.lang.String[]">
                                    <value><![CDATA[所属区域]]></value>
                                </constructor-arg>
                                <!-- 构造函数参数 5: 字段名对应的字段值转换器 -->
                                <constructor-arg index="4"><null></null></constructor-arg>
                            </bean>
                        </entry>
                        <entry key="楼盘名">
                            <bean class="org.tomstools.crawler.common.FieldSplitter" scope="prototype">
                                <!-- 构造函数参数 1: 拆分时的分隔符 -->
                                <constructor-arg index="0" type="java.lang.String">
                                    <value><![CDATA[：]]></value>
                                </constructor-arg>
                                <!-- 构造函数参数 2: 拆分的字段个数 -->
                                <constructor-arg index="1" type="int">
                                    <value><![CDATA[2]]></value>
                                </constructor-arg>
                                <!-- 构造函数参数 3: 需要收集的字段的索引数组。从0开始计数。索引必须小于拆分的字段个数 -->
                                <constructor-arg index="2" type="int[]">
                                    <value><![CDATA[1]]></value>
                                </constructor-arg>
                                <!-- 构造函数参数 4: 需要收集的字段的名称数组。索引数组和名称数组必须匹配 -->
                                <constructor-arg index="3" type="java.lang.String[]">
                                    <value><![CDATA[楼盘名]]></value>
                                </constructor-arg>
                                <!-- 构造函数参数 5: 字段名对应的字段值转换器 -->
                                <constructor-arg index="4"><null></null></constructor-arg>
                            </bean>
                        </entry>
                        <entry key="地址">
                            <bean class="org.tomstools.crawler.common.FieldSplitter" scope="prototype">
                                <!-- 构造函数参数 1: 拆分时的分隔符 -->
                                <constructor-arg index="0" type="java.lang.String">
                                    <value><![CDATA[：]]></value>
                                </constructor-arg>
                                <!-- 构造函数参数 2: 拆分的字段个数 -->
                                <constructor-arg index="1" type="int">
                                    <value><![CDATA[2]]></value>
                                </constructor-arg>
                                <!-- 构造函数参数 3: 需要收集的字段的索引数组。从0开始计数。索引必须小于拆分的字段个数 -->
                                <constructor-arg index="2" type="int[]">
                                    <value><![CDATA[1]]></value>
                                </constructor-arg>
                                <!-- 构造函数参数 4: 需要收集的字段的名称数组。索引数组和名称数组必须匹配 -->
                                <constructor-arg index="3" type="java.lang.String[]">
                                    <value><![CDATA[地址]]></value>
                                </constructor-arg>
                                <!-- 构造函数参数 5: 字段名对应的字段值转换器 -->
                                <constructor-arg index="4"><null></null></constructor-arg>
                            </bean>
                        </entry>
                        <entry key="朝向">
                            <bean class="org.tomstools.crawler.common.FieldSplitter" scope="prototype">
                                <!-- 构造函数参数 1: 拆分时的分隔符 -->
                                <constructor-arg index="0" type="java.lang.String">
                                    <value><![CDATA[：]]></value>
                                </constructor-arg>
                                <!-- 构造函数参数 2: 拆分的字段个数 -->
                                <constructor-arg index="1" type="int">
                                    <value><![CDATA[2]]></value>
                                </constructor-arg>
                                <!-- 构造函数参数 3: 需要收集的字段的索引数组。从0开始计数。索引必须小于拆分的字段个数 -->
                                <constructor-arg index="2" type="int[]">
                                    <value><![CDATA[1]]></value>
                                </constructor-arg>
                                <!-- 构造函数参数 4: 需要收集的字段的名称数组。索引数组和名称数组必须匹配 -->
                                <constructor-arg index="3" type="java.lang.String[]">
                                    <value><![CDATA[朝向]]></value>
                                </constructor-arg>
                                <!-- 构造函数参数 5: 字段名对应的字段值转换器 -->
                                <constructor-arg index="4"><null></null></constructor-arg>
                            </bean>
                        </entry>
                        <entry key="建筑年代">
                            <bean class="org.tomstools.crawler.common.FieldSplitter" scope="prototype">
                                <!-- 构造函数参数 1: 拆分时的分隔符 -->
                                <constructor-arg index="0" type="java.lang.String">
                                    <value><![CDATA[：]]></value>
                                </constructor-arg>
                                <!-- 构造函数参数 2: 拆分的字段个数 -->
                                <constructor-arg index="1" type="int">
                                    <value><![CDATA[2]]></value>
                                </constructor-arg>
                                <!-- 构造函数参数 3: 需要收集的字段的索引数组。从0开始计数。索引必须小于拆分的字段个数 -->
                                <constructor-arg index="2" type="int[]">
                                    <value><![CDATA[1]]></value>
                                </constructor-arg>
                                <!-- 构造函数参数 4: 需要收集的字段的名称数组。索引数组和名称数组必须匹配 -->
                                <constructor-arg index="3" type="java.lang.String[]">
                                    <value><![CDATA[建筑年代]]></value>
                                </constructor-arg>
                                <!-- 构造函数参数 5: 字段名对应的字段值转换器 -->
                                <constructor-arg index="4"><null></null></constructor-arg>
                            </bean>
                        </entry>
                        <entry key="楼层">
                            <bean class="org.tomstools.crawler.common.FieldSplitter" scope="prototype">
                                <!-- 构造函数参数 1: 拆分时的分隔符 -->
                                <constructor-arg index="0" type="java.lang.String">
                                    <value><![CDATA[：]]></value>
                                </constructor-arg>
                                <!-- 构造函数参数 2: 拆分的字段个数 -->
                                <constructor-arg index="1" type="int">
                                    <value><![CDATA[2]]></value>
                                </constructor-arg>
                                <!-- 构造函数参数 3: 需要收集的字段的索引数组。从0开始计数。索引必须小于拆分的字段个数 -->
                                <constructor-arg index="2" type="int[]">
                                    <value><![CDATA[1]]></value>
                                </constructor-arg>
                                <!-- 构造函数参数 4: 需要收集的字段的名称数组。索引数组和名称数组必须匹配 -->
                                <constructor-arg index="3" type="java.lang.String[]">
                                    <value><![CDATA[楼层]]></value>
                                </constructor-arg>
                                <!-- 构造函数参数 5: 字段名对应的字段值转换器 -->
                                <constructor-arg index="4"><null></null></constructor-arg>
                            </bean>
                        </entry>
                        <entry key="装修状况">
                            <bean class="org.tomstools.crawler.common.FieldSplitter" scope="prototype">
                                <!-- 构造函数参数 1: 拆分时的分隔符 -->
                                <constructor-arg index="0" type="java.lang.String">
                                    <value><![CDATA[：]]></value>
                                </constructor-arg>
                                <!-- 构造函数参数 2: 拆分的字段个数 -->
                                <constructor-arg index="1" type="int">
                                    <value><![CDATA[2]]></value>
                                </constructor-arg>
                                <!-- 构造函数参数 3: 需要收集的字段的索引数组。从0开始计数。索引必须小于拆分的字段个数 -->
                                <constructor-arg index="2" type="int[]">
                                    <value><![CDATA[1]]></value>
                                </constructor-arg>
                                <!-- 构造函数参数 4: 需要收集的字段的名称数组。索引数组和名称数组必须匹配 -->
                                <constructor-arg index="3" type="java.lang.String[]">
                                    <value><![CDATA[装修状况]]></value>
                                </constructor-arg>
                                <!-- 构造函数参数 5: 字段名对应的字段值转换器 -->
                                <constructor-arg index="4"><null></null></constructor-arg>
                            </bean>
                        </entry>
                        <entry key="房屋类别">
                            <bean class="org.tomstools.crawler.common.FieldSplitter" scope="prototype">
                                <!-- 构造函数参数 1: 拆分时的分隔符 -->
                                <constructor-arg index="0" type="java.lang.String">
                                    <value><![CDATA[：]]></value>
                                </constructor-arg>
                                <!-- 构造函数参数 2: 拆分的字段个数 -->
                                <constructor-arg index="1" type="int">
                                    <value><![CDATA[2]]></value>
                                </constructor-arg>
                                <!-- 构造函数参数 3: 需要收集的字段的索引数组。从0开始计数。索引必须小于拆分的字段个数 -->
                                <constructor-arg index="2" type="int[]">
                                    <value><![CDATA[1]]></value>
                                </constructor-arg>
                                <!-- 构造函数参数 4: 需要收集的字段的名称数组。索引数组和名称数组必须匹配 -->
                                <constructor-arg index="3" type="java.lang.String[]">
                                    <value><![CDATA[房屋类别]]></value>
                                </constructor-arg>
                                <!-- 构造函数参数 5: 字段名对应的字段值转换器 -->
                                <constructor-arg index="4"><null></null></constructor-arg>
                            </bean>
                        </entry>
                        <entry key="物业类别">
                            <bean class="org.tomstools.crawler.common.FieldSplitter" scope="prototype">
                                <!-- 构造函数参数 1: 拆分时的分隔符 -->
                                <constructor-arg index="0" type="java.lang.String">
                                    <value><![CDATA[：]]></value>
                                </constructor-arg>
                                <!-- 构造函数参数 2: 拆分的字段个数 -->
                                <constructor-arg index="1" type="int">
                                    <value><![CDATA[2]]></value>
                                </constructor-arg>
                                <!-- 构造函数参数 3: 需要收集的字段的索引数组。从0开始计数。索引必须小于拆分的字段个数 -->
                                <constructor-arg index="2" type="int[]">
                                    <value><![CDATA[1]]></value>
                                </constructor-arg>
                                <!-- 构造函数参数 4: 需要收集的字段的名称数组。索引数组和名称数组必须匹配 -->
                                <constructor-arg index="3" type="java.lang.String[]">
                                    <value><![CDATA[物业类别]]></value>
                                </constructor-arg>
                                <!-- 构造函数参数 5: 字段名对应的字段值转换器 -->
                                <constructor-arg index="4"><null></null></constructor-arg>
                            </bean>
                        </entry>
                    </map>
                </constructor-arg>
            </bean>
        </property>
    </bean>

    <!-- 结果数据操作对象：文件方式。对应 org.tomstools.crawler.dao.ResultDAO -->
    <bean id="fileResultDAO" class="org.tomstools.crawler.dao.FileResultDAO" scope="prototype">
        <!-- 构造函数参数 1: 文件保存的根目录 -->
        <constructor-arg index="0" type="java.lang.String" value="e:\work"></constructor-arg>
        <!-- 构造函数参数 2: 结果数据保存时各字段之间的分隔符 -->
        <constructor-arg index="1" type="java.lang.String">
            <value>,</value>

        </constructor-arg>
        <!-- 构造函数参数3: 需要剔除的特殊字符 -->
        <constructor-arg index="2">
            <array>
                <value>&#10;</value>
                <value>&#13;</value>
                <value>\[</value>
                <value>\]</value>
            </array>
        </constructor-arg>
    </bean>

    <!-- 定向爬取。对应 org.tomstools.crawler.TargetCrawler -->
    <bean id="targetCrawler" class="org.tomstools.crawler.TargetCrawler" scope="prototype">
        <!-- 构造函数参数 1: 定向爬取目标列表 List<org.tomstools.crawler.config.Target> -->
        <constructor-arg index="0">
            <list>
                 <!--<ref bean="target-0731fdc-floor-cs-detail" />
                <ref bean="target-0731fdc-floor-xt" />
                <ref bean="target-0731fdc-floor-cs" />
                <ref bean="target-0731fdc-floor-zz" />-->
                 <ref bean="target-0731fdc-esf"/>
            </list>
        </constructor-arg>
        <!-- 构造函数参数 2: 结果数据操作对象。对应 接口 org.tomstools.crawler.dao.ResultDAO -->
        <constructor-arg index="1" ref="fileResultDAO"></constructor-arg>
    </bean>

</beans>
