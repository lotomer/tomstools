<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:context="http://www.springframework.org/schema/context"
    xsi:schemaLocation="   
     http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd   
     http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd">

    <!-- in-memory database and a datasource -->
    <!-- 配置文件导入 -->
    <context:property-placeholder location="config.properties"
        ignore-unresolvable="true" />
    <!-- 注册自定义属性编辑器 <bean id="customEditorConfigure" class="org.springframework.beans.factory.config.CustomEditorConfigurer"> 
        <property name="customEditors"> <map> <entry key="java.util.Map"> <bean class="cn.com.talkweb.classify.spring.MapEditor"> 
        </bean> </entry> </map> </property> </bean> -->

    <!-- 配置数据库数据源 -->
    <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource">
        <property name="driverClassName" value="${jdbc_classname}"/>
        <property name="url" value="${jdbc_url}"/>
        <property name="username" value="${jdbc_user}"/>
        <property name="password" value="${jdbc_password}"/>
        <property name="maxIdle" value="20"/>
        <property name="maxActive" value="50"/>
        <property name="minIdle" value="10"/>
        <property name="maxWait" value="3600000"/>
        <property name="testWhileIdle" value="true"/>
        <property name="removeAbandoned" value="true"/>
        <property name="removeAbandonedTimeout" value="60"/>
    </bean>

    <!-- 开启事务 <tx:jta-transaction-manager /> -->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource" />
    </bean>
    
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource"/>
        <property name="transactionFactory">
            <bean class="org.apache.ibatis.transaction.managed.ManagedTransactionFactory" />
        </property>
        <property name="mapperLocations" value="classpath*:${BUSI_NAME}/**/*-mapper.xml" />
    </bean>
    
    <!-- 
    <bean id="sqlSession" class="org.mybatis.spring.SqlSessionTemplate">
        <constructor-arg index="0" ref="sqlSessionFactory" />
    </bean> -->

    <!-- 爬取规则。对应 org.tomstools.crawler.config.CrawlingRule -->
    <bean id="crawlingRule" class="org.tomstools.crawler.config.CrawlingRule" scope="prototype">
        <property name="batchIntervalInit" value="500"></property>
        <property name="batchIntervalFinal" value="300"></property>
        <property name="batchIntervalStep" value="50"></property>
        <property name="batchSizeInit" value="5"></property>
        <property name="batchSizeFinal" value="2"></property>
        <property name="batchSizeStep" value="1"></property>
        <property name="connectionTimeOut" value="20000"></property>
        <property name="socketTimeOut" value="30000"></property>
    </bean>

    <bean name="pageFetcher" class="org.tomstools.crawler.http.PageFetcher" scope="prototype">
        <!-- 构造函数参数 1: 网页字符集 -->
        <constructor-arg index="0" type="java.lang.String" value="GBK"></constructor-arg>
        <property name="method" value="GET"></property>
        <property name="tryCount" value="5"></property>
        <property name="requestInfo">
            <bean class="org.tomstools.crawler.http.RequestInfo" scope="prototype">
                <property name="formDatas">
                    <list></list>
                </property>
                <property name="headers">
                    <map>
                        <entry key="Accept"><value><![CDATA[text/html, application/xhtml+xml, */*]]></value></entry>
                        <entry key="Accept-Encoding"><value><![CDATA[gzip, deflate]]></value></entry>
                        <entry key="Accept-Language"><value><![CDATA[zh-CN]]></value></entry>
                        <entry key="Cache-Control"><value><![CDATA[no-cache]]></value></entry>
                        <entry key="Connection"><value><![CDATA[keep-alive]]></value></entry>
                        <entry key="User-Agent"><value><![CDATA[Mozilla/5.0 (compatible; MSIE 9.0; Windows NT 6.1; Trident/5.0)]]></value></entry>
                    </map>
                </property>
            </bean>
        </property>
    </bean>
    <!-- 文档解析器：HTML。对应 org.tomstools.crawler.parser.Parser -->
    <bean id="htmlParser" class="org.tomstools.crawler.parser.HTMLParser" scope="prototype">
    </bean>

    <!-- 结果数据操作对象：数据库方式。对应 org.tomstools.crawler.dao.ResultDAO -->
    <bean id="dbDAO" class="org.tomstools.crawler.dao.DBResultDAO" scope="prototype">
        <property name="sqlSessionFactory" ref="sqlSessionFactory" />
    </bean>
    <!-- 结果数据操作对象：文件方式。对应 org.tomstools.crawler.dao.ResultDAO -->
    <bean id="fileResultDAO" class="org.tomstools.crawler.dao.FileResultDAO" scope="prototype">
        <!-- 构造函数参数 1: 文件保存的根目录 -->
        <constructor-arg index="0" type="java.lang.String" value="${file.result.dir}"></constructor-arg>
        <!-- 构造函数参数 2: 结果数据保存时各字段之间的分隔符 -->
        <constructor-arg index="1" type="java.lang.String">
            <value>\</value>
        </constructor-arg>
        <!-- 构造函数参数3: 需要剔除的特殊字符 -->
        <constructor-arg index="2">
            <array>
                <value>&#10;</value>
                <value>&#13;</value>
                <value>\[</value>
                <value>\]</value>
            </array>
        </constructor-arg>
    </bean>

    <import resource="10jqka-ssyw.xml"/>
    <import resource="55188-wjj.xml"/>
    <import resource="cbrc-rd.xml"/>
    <import resource="cbrc-yw.xml"/>
    <import resource="csrc-gwyzcxx.xml"/>
    <import resource="csrc-xwdd.xml"/>
    <import resource="csrc-xwfbh.xml"/>
    <import resource="datianxia.xml"/>
    <import resource="eastmoney-yw.xml"/>
    <import resource="gov-bmxw.xml"/>
    <import resource="gov-dfxw.xml"/>
    <import resource="gov-gwy.xml"/>
    <import resource="gov-zc.xml"/>
    <import resource="miit-bujiguan.xml"/>
    <import resource="miit-yaowen.xml"/>
    <import resource="nhfpc-dt.xml"/>
    <import resource="nhfpc-gw.xml"/>
    <import resource="nhfpc-ldhd.xml"/>
    <import resource="sasac-szyw.xml"/>
    <import resource="sasac-yqdt.xml"/>
    <import resource="sasac-yw.xml"/>
    <import resource="sdpc-dfdt.xml"/>
    <import resource="sdpc-gzdt.xml"/>
    <import resource="sdpc-jjxsfx.xml"/>
    <import resource="sdpc-xwfb.xml"/>
    <import resource="sdpc-xwzb.xml"/>
    <import resource="sdpc-zcfbl.xml"/>
    <import resource="taoguba-ylxtx.xml"/>
    
    <!-- 定向爬取。对应 org.tomstools.crawler.TargetCrawler -->
    <bean id="targetCrawler" class="org.tomstools.crawler.TargetCrawler" scope="prototype">
        <!-- 构造函数参数 1: 定向爬取目标列表 List<org.tomstools.crawler.config.Target> -->
        <constructor-arg index="0">
            <list>               
                <!-- <ref bean="target-10jqka-ssyw"/>
                <ref bean="target-eastmoney-yw"/> -->
                <ref bean="target-55188-wjj"/>
                <ref bean="target-cbrc-rd"/>
                <ref bean="target-cbrc-yw"/>
                <ref bean="target-csrc-gwyzcxx"/>
                <ref bean="target-csrc-xwdd"/>
                <ref bean="target-csrc-xwfbh"/>
                <ref bean="target-datianxia"/>
                <ref bean="target-nhfpc-dt"/>
                <ref bean="target-nhfpc-gw"/>
                <ref bean="target-nhfpc-ldhd"/>
                <ref bean="target-sasac-szyw"/>
                <ref bean="target-sasac-yqdt"/>
                <ref bean="target-sasac-yw"/>
                <ref bean="target-sdpc-dfdt"/>
                <ref bean="target-sdpc-gzdt"/>
                <ref bean="target-sdpc-jjxsfx"/>
                <ref bean="target-sdpc-xwfb"/>
                <ref bean="target-sdpc-xwzb"/>
                <ref bean="target-sdpc-zcfbl"/>
                <ref bean="target-taoguba-ylxtx"/>
                <ref bean="target-gov-bmxw"/>
                <ref bean="target-gov-dfxw"/>
                <ref bean="target-gov-gwy"/>
                <ref bean="target-gov-zc"/>
                <ref bean="target-miit-bujiguan"/>
                <ref bean="target-miit-yaowen"/>
            </list>
        </constructor-arg>
        <!-- 构造函数参数 2: 结果数据操作对象。对应 接口 org.tomstools.crawler.dao.ResultDAO 
        <constructor-arg index="1" ref="fileResultDAO"></constructor-arg> -->
        <constructor-arg index="1" ref="dbDAO"></constructor-arg>
    </bean>

</beans>
