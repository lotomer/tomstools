<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
xmlns:tx="http://www.springframework.org/schema/tx"
xmlns:jdbc="http://www.springframework.org/schema/jdbc"
xmlns:context="http://www.springframework.org/schema/context"
xsi:schemaLocation="
http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd
http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-3.0.xsd
http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd">

    <!-- 数据源连接信息配置文件 -->
    <context:property-placeholder location="classpath*:jdbc.properties" />
    
    <!-- in-memory database and a datasource 
<jdbc:embedded-database id="dataSource">
<jdbc:script location="classpath:database/jpetstore-hsqldb-schema.sql"/>
<jdbc:script location="classpath:database/jpetstore-hsqldb-dataload.sql"/>
</jdbc:embedded-database>-->

    <!-- 开发环境数据源 -->
    <bean id="dataSource_dev" class="org.apache.commons.dbcp.BasicDataSource" scope="singleton"
        destroy-method="close">
        <property name="driverClassName" value="${jdbc_classname}" />
        <property name="url" value="${jdbc_url}" />
        <property name="username" value="${jdbc_user}" />
        <property name="password" value="${jdbc_password}" />
        <property name="maxIdle" value="20"/>
        <property name="maxActive" value="50"/>
        <property name="minIdle" value="10"/>
        <property name="maxWait" value="3600000"/>
        <property name="testWhileIdle" value="true"/>
        <property name="removeAbandoned" value="true"/>
        <property name="removeAbandonedTimeout" value="60"/>
    </bean>

    <!-- 生产环境数据源
    <bean id="dataSource_product" class="com.mchange.v2.c3p0.ComboPooledDataSource"
        destroy-method="close">
        <property name="driverClass" value="${jdbc.driverClassName.mysql}" />
        <property name="jdbcUrl" value="${jdbc.url.mysql}" />
        <property name="user" value="${jdbc.username.mysql}" />
        <property name="password" value="${jdbc.password.mysql}" />
        <property name="maxPoolSize" value="${c3p0.maxPoolSize}" />
        <property name="acquireIncrement" value="${c3p0.acquireIncrement}" />
        <property name="minPoolSize" value="${c3p0.minPoolSize}" />
        <property name="maxIdleTime" value="${c3p0.maxIdleTime}" />
    </bean> -->

    <!-- 配置sqlSessionFactory -->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource_dev" />
        <property name="typeAliasesPackage" value="com.asiainfo.ods.omp.web.model" />
        <property name="configLocation" value="classpath:mybatis-config.xml" />
        <!-- 自动到mappers包下面去搜索mybatis的映射文件 -->
        <property name="mapperLocations" value="classpath*:mybatis-config.xml" />
    </bean>

    <!-- 使用Spring的事务管理器 -->
    <bean id="transactionManager"
        class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource_dev" />
    </bean>
    <!-- 自动扫描dao和service包(自动注入) -->  
    <context:component-scan base-package="com.asiainfo.ods.omp.webservice,com.asiainfo.ods.omp.web.action,com.asiainfo.ods.omp.web.model,com.asiainfo.ods.omp.web.persistence,com.asiainfo.ods.omp.web.service" />
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="com.asiainfo.ods.omp.web.persistence" />
    </bean>
</beans>