<%@page language="java" contentType="text/html; charset=UTF-8" pageEncoding="UTF-8"%>

<!DOCTYPE html>
<html>
<head>
    <meta charset="UTF-8">
    <title>${page.pageName}</title>
    <link rel="stylesheet" type="text/css" href='css/easyui/themes/${theme}/easyui.css'>
    <link rel="stylesheet" type="text/css" href="css/easyui/themes/icon.css">
    <link rel="stylesheet" type="text/css" href="css/main.css">
</head> 
<body class="easyui-layout">
    <div id="cluster-main" style="width:100%;height:480px">
    </div>
</body>
    <script type="text/javascript" src="js/jquery.min.js"></script>
    <script type="text/javascript" src="js/easyui/jquery.easyui.min.js"></script>
    <script type="text/javascript" src="js/easyui/locale/easyui-lang-zh_CN.js"></script>
    <script type="text/javascript" src="js/index.js"></script>
    <script type="text/javascript">
        // 面板与内容之间的差值
        var diffWidth = 17,diffHeight = 42;
        // 页面初始化
        $(function(){
            initTheme('cb-theme','${theme}');
            
            // 子页面
            subPages = eval('${subPages}');
            // 排序
            subPages = subPages.sort(function (content1,content2) {
                return content1.orderNum - content2.orderNum;
            });
            // 按顺序创建子页面
            for (var i = 0,iLen = subPages.length; i < iLen; i++) {
				var subPage = subPages[i];
				
			}
        });
        
        // 根据page信息创建页面。如果page包含子页面，则使用子页面框架创建页面
        function createPage(page,isAppend,queryParams,canClose){
            if (console && console.log){console.log(page);}
            alert(page.pageName + '\n' + page.contentURL);
            return createModuleByContent2(page.contentURL,page.useIframe,page.pageId,page.pageName,page.params,page.width,page.height,isAppend,queryParams,canClose);
        }
        function createModuleByContent2(contentURL,useIframe,id,name,params,width,height,isAppend,queryParams,canClose) {
            if (contentURL){ // 指定了具体的URL，则直接展现该页面
                //content.useIframe = '0';
                if ("1" == useIframe) {
                    // 使用iframe框架
                    var url = "proxy.php?u=" + encodeURIComponent(contentURL) + '&pid=p_' + id;
                    if (params) {
                        url += '&p=' + encodeURIComponent(params);
                    }
                    if (queryParams) {
                        url += '&r=' + encodeURIComponent(queryParams);
                    }
                    return createWindow(id,name,url,width,height,params,isAppend,true,canClose);
                }else {
                    var url = content.contentURL;
                    if (queryParams) {
                        url += queryParams;
                    }
                    if (! /[?]/.test(url)) {
                        url += "?1";
                    }
                    if (content.params) {
                        url += "&" + content.params.replace('?','');
                    }
                    
                    return createWindow(content.menuId,content.menuName,url,content.width,content.height,content.params,isAppend,false,canClose);
                }
                
            }else{
                window.messager.show({
                    title:'提示',
                    msg:'模块【' + content.menuName + '】未指定内容对应的url！',
                    timeout:5000,
                    showType:'slide'
                });
                return false;
            }
        }
        function createWindow1(id,title,url,w,h,params,isAppend,useIframe,canClose) {
            // 判断是否已经存在
            var tab = $('#divContent').tabs('getTab',title);
            if(tab){
                $('#divContent').tabs('select',title);
                $('#p_i_' + id).attr('src',url);
            }else{
                $('#divContent').tabs('add',{
                    id:'p_' + id,
                    title:title,
                    //content:'Tab Body',
                    //href : url,
                    fit:true,
                    closable:canClose ? true : false,
                    onResize : function  (w,h) {
                        //console.info(w + ':' + h);
                    },
                    onDestroy: function() {
                        closeModule(id,title);
                    }
                });
                $('#p_' + id).append('<iframe id="p_i_' + id + '" border="0" src="' + url + '" width="100%" height="99%"/>');
            }
        }
        function createWindow(id,title,url,w,h,params,isAppend,useIframe) {
            var obj = $('#p_' + id);
            // 已经存在，则先删除，再重建
            if (obj.length > 0){
                obj.panel('destroy');
            }
            if(isAppend){
                $('#divContent').append('<div id="p_' +id+ '"></div>');
            }else{
                $('#divContent').prepend('<div id="p_' +id+ '"></div>');
            }
            var width = w - diffWidth;    // 宽
            var height = h;   // 高
            if ("auto" != height) height = height - diffHeight;
            
            $('#p_' + id).window({
                left: 0,
                width: w,
                height: h,
                title: title,
                href: url + '&w=' + width + '&h=' + height + '&theme=' + getTheme('cb-theme'),
                top: 0,
                style: {position:'relative'},
                inline: true,
                minimizable: false,
                resizable: false,
                modal: false,
                shadow: false,
                draggable: false,
                tools:[{
                    iconCls:'icon-reload',
                    handler:function(){
                        if (useIframe) {
                            var ifrm = $('#p_' + id + '>iframe'),oldWidth=ifrm.css('width'),oldHeight=ifrm.css('height');
                            $('#p_' + id).panel('refresh', url + '&w=' + oldWidth + '&h=' + oldHeight + '&theme=' + getTheme('cb-theme'));
                            changeContentFrameSize(id,oldWidth,oldHeight);
                        }else {
                            $('#p_' + id).panel('refresh', url + '&w=' + width + '&h=' + height + '&theme=' + getTheme('cb-theme'));
                        }
                    }
                }],
                onMinimize: function() {
                    closeModule(id,title);
                },
                onClose: function() {
                    closeModule(id,title);
                    $('#p_' + id).window("destroy");
                },
                onResize: function (width,height) {
                    changeContentFrameSize(id,width - diffWidth,height - diffHeight);
                },
                onMaximize: function() {
                    var o = $('#p_' + id).window("window");
                    o.css('z-index', $.fn.window.defaults.zIndex++);
                    o.css('position', 'absolute');
                    o.css('left', '0');
                    o.css('top', '0');
                },
                onRestore: function() {
                    var o = $('#p_' + id).window("window");
                    o.css('z-index', $.fn.window.defaults.zIndex++);
                    o.css('position', 'relative');
                },
                onLoad:function  () {
                    $('#p_' + id).window("expand");
                }
            }).window('maximize');
        }

        // 调整里面iframe的高度和宽度
        function changeContentFrameSize (id,width,height) {
            var o = $('#p_' + id + '>iframe');
            o.css('width',width);
            o.css('height',height);
        }
        function closeModule(menuId,title) {
            var ppm = getPPM(menuId),item = ppm.menu('findItem',title);
            ppm.menu('enableItem', item.target);
        }
        
    </script>
</html>
